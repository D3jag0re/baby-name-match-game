name: Deploy to Azure App Service

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m venv venv
        . venv/bin/activate
        pip install -r requirements.txt

    - name: Zip the application
      run: |
        zip -r app.zip .

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}   

    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve
      working-directory: ./terraform
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}


    - name: Retrieve Outputs
      id: outputs
      run: |
        terraform output
        terraform output -raw storage_account_name
        terraform output -raw storage_account_container_name
        echo "Running terraform output command..."
        storage_account_name=$(terraform output -raw storage_account_name)
        storage_container_name=$(terraform output -raw storage_account_container_name)
        app_service_name=$(terraform output -raw app_service_name)
        echo "STORAGE_ACCOUNT_NAME=${storage_account_name}" >> $GITHUB_ENV
        echo "STORAGE_CONTAINER_NAME=${storage_container_name}" >> $GITHUB_ENV
        echo "APP_SERVICE_NAME=${app_service_name}" >> $GITHUB_ENV
        echo "var is $STORAGE_ACCOUNT_NAME"
        echo "var is $STORAGE_CONTAINER_NAME"
      working-directory: ./terraform
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    - name: Deploy to Azure Storage
      uses: azure/cli@v1
      with:
        inlineScript: |
         az storage blob upload --account-name ${{ steps.outputs.STORAGE_ACCOUNT_NAME }} --container-name ${{ steps.outputs.STORAGE_CONTAINER_NAME }} --file app.zip --name app.zip --auth-mode key

    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: $APP_SERVICE_NAME
        package: './app.zip'
        publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}



